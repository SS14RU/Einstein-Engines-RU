using Content.Client.UserInterface.Controls;
using Content.Shared.AWS.Economy;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.AWS.Economy.UI.ManagementConsole;

[GenerateTypedNameReferences]
public sealed partial class EconomyManagementConsoleMenu : FancyWindow
{
    [Dependency] private readonly EntityManager _entityManager = default!;

    private EconomyManagementConsoleBoundUserInterface Owner { get; set; }

    public EconomyManagementConsoleMenu(EconomyManagementConsoleBoundUserInterface owner)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        Owner = owner;

        Tabs.SetTabTitle(0, Loc.GetString("economybanksystem-management-console-management-tab"));
        Tabs.SetTabTitle(1, Loc.GetString("economybanksystem-management-console-account-holder-tab"));
        Tabs.SetTabTitle(2, Loc.GetString("economybanksystem-management-console-bonus-tab"));

        AccountManagementTab.OnBlockAccountPressed += Owner.BlockAccountToggle;
        AccountManagementTab.OnChangeNamePressed += Owner.ChangeName;

        AccountHolderTab.OnChangeNamePressed += Owner.ChangeName;
        AccountHolderTab.OnBlockAccountPressed += Owner.BlockAccountToggle;
        AccountHolderTab.OnChangeAccountPressed += Owner.ChangeAccountHolderID;
        AccountHolderTab.OnInitializeAccountPressed += Owner.InitializeAccountOnHolder;
    }

    public void UpdateState(EconomyManagementConsoleUserInterfaceState state)
    {
        UpdatePriveleges(state.Priveleged);
        UpdateHolder(state.Holder);

        AccountManagementTab.Initialize();
    }

    private void UpdatePriveleges(bool priveleged)
    {
        AccountManagementTab.Priveleged = priveleged;
        AccountHolderTab.Priveleged = priveleged;
        AccountHolderTab.UpdateButtons(priveleged);
    }

    private void UpdateHolder(NetEntity? holder)
    {
        var localHolder = _entityManager.GetEntity(holder);
        if (!_entityManager.TryGetComponent<EconomyAccountHolderComponent>(localHolder, out var holderComp))
            return;

        AccountHolderTab.CurrentCard = (localHolder.Value, holderComp);
        AccountHolderTab.GetAccount(AccountHolderTab.CurrentCard);
    }
}
